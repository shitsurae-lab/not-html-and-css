//- Pugの書き方まとめ
//- http://bit.ly/irisash-pug
//- Pug書き方基本 https://bit.ly/codeisle01
//- Pug include等 http://bit.ly/codeisle02
extends _meta
block content
    - var name = 'Pug';
    p 私の名前は#{name}です
    p この
      //- パイプライン(一行表示)
      | 文章は一行表示
      | になります。
    br
    | 改行はbrを使用します
    p.
      また、「タグ名+ドット」後の段落はそのタグによって囲まれます

    //- 繰り返し記法①
    - for(var i=0;i<3;i++)
      p #{i}

    //- 繰り返し記法②
    - var arr = ['pug','Jade', 'ejs']
    each el in arr
      p:span #{el}

    //- mixin and block(mixin)
    mixin dammy(first,color)
      p(style="color:"+color) #{first}
      if block
        block
      else
        p No block
    +dammy('Cheese','#444')
      p This is block!

    //- そのままhtml
    <p>そのままHTML</p>

    //- 条件分岐
    - var page = 'index';

    case page
      when 'index'
        h1 タイトル
      default
        p 本文

    //- 連想配列例　https://bit.ly/3GdZruZ

    -

      var obj ={
        title: 'Home',
        description: 'hogehoge',
        date: '2021/12/04'
      }

    ul
      each val, key in obj
        li(class=key) !{val}

    //- 配列に入れた連想配列

    -

      var arr = [
        {
          title: 'fuga01',
          description: 'fuga desc',
          date: '2021/12/08'
        },
        {
          title: 'fuga02',
          description: 'fuga02 desc',
          date: '2021/12/08'
        },
        {
          title: 'fuga03',
          description: 'fuga03 desc',
          date: '2021/12/08'
        },
      ];

    //- 取り出し
    ul
      each val in arr
        li
          h2 #{val.title}
          p #{val.description}
          p #{val.date}

    //- 配列を記述、繰り返しで出力 ※「-」と「var hoge」の間を一行開ける形で改行(タブを残さない)
    -

      var nav = [
        {
          title: 'fuga01',
          url: 'https://qiita.com',
          date: '2021/12/08'
        },
        {
          title: 'fuga02',
          url: 'https://qiita.com',
          date: '2021/12/08'
        },
        {
          title: 'fuga03',
          url: 'https://qiita.com',
          date: '2021/12/08'
        },
      ];

    //- 取り出し
    ul
      each val in nav
        li
          h2 #{val.title}
          a(href=val.url) #{val.title}
          //- a(href=val.url)=val.titleでも可
          p #{val.url}
